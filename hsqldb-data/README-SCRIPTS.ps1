# ============================================================
# DOCUMENTA√á√ÉO - SCRIPTS DE BANCO DE DADOS CSONLINE
# ============================================================
# Vers√£o: 1.0
# Data: 2025-08-07
# Autor: CSOnline Team
# ============================================================

Write-Host "============================================================" -ForegroundColor Cyan
Write-Host "DOCUMENTA√á√ÉO - SCRIPTS DE BANCO DE DADOS CSONLINE" -ForegroundColor Cyan
Write-Host "============================================================" -ForegroundColor Cyan

Write-Host "`nüìÅ ARQUIVOS CRIADOS:" -ForegroundColor Yellow
Write-Host "=====================" -ForegroundColor Yellow

Write-Host "`n1. üì§ export-database.ps1" -ForegroundColor Green
Write-Host "   Fun√ß√£o: Exporta todos os dados do banco HSQLDB para arquivo SQL"
Write-Host "   Uso: .\export-database.ps1 [-OutputFile 'nome.sql'] [-Verbose]"
Write-Host "   Sa√≠da: Arquivo SQL com todos os dados formatados e comentados"

Write-Host "`n2. üì• import-database.ps1" -ForegroundColor Green
Write-Host "   Fun√ß√£o: Importa√ß√£o b√°sica com dados de exemplo"
Write-Host "   Uso: .\import-database.ps1 [-ExportFile 'arquivo.sql'] [-Verbose]"
Write-Host "   Caracter√≠sticas: Importa√ß√£o simples, alguns dados de exemplo"

Write-Host "`n3. üß† import-database-advanced.ps1" -ForegroundColor Green
Write-Host "   Fun√ß√£o: Parse completo do arquivo SQL e importa√ß√£o exata"
Write-Host "   Uso: .\import-database-advanced.ps1 [-DryRun] [-Verbose]"
Write-Host "   Caracter√≠sticas:"
Write-Host "     - Parse completo do arquivo SQL exportado"
Write-Host "     - Preserva relacionamentos entre tabelas"
Write-Host "     - Mapeia IDs originais para novos"
Write-Host "     - Modo dry-run para teste"

Write-Host "`n4. üîÑ reset-and-import.ps1" -ForegroundColor Green
Write-Host "   Fun√ß√£o: Script completo - apaga banco e reimporta dados"
Write-Host "   Uso: .\reset-and-import.ps1 [-DryRun] [-NoBackup] [-ForceReset]"
Write-Host "   Caracter√≠sticas:"
Write-Host "     - Faz backup autom√°tico dos dados atuais"
Write-Host "     - Apaga TODOS os dados do banco"
Write-Host "     - Reimporta dados do arquivo SQL"
Write-Host "     - Valida√ß√£o completa p√≥s-importa√ß√£o"
Write-Host "     - Modo seguro com confirma√ß√µes"

Write-Host "`nüìä FLUXO RECOMENDADO:" -ForegroundColor Yellow
Write-Host "======================" -ForegroundColor Yellow

Write-Host "`nüéØ PARA BACKUP REGULAR:"
Write-Host "   .\export-database.ps1 -OutputFile `"backup-$(Get-Date -Format 'yyyyMMdd').sql`""

Write-Host "`nüéØ PARA TESTAR IMPORTA√á√ÉO:"
Write-Host "   .\import-database-advanced.ps1 -DryRun -Verbose"

Write-Host "`nüéØ PARA RESET COMPLETO DO BANCO:"
Write-Host "   .\reset-and-import.ps1 -Verbose"

Write-Host "`nüéØ PARA RESET SEM BACKUP:"
Write-Host "   .\reset-and-import.ps1 -NoBackup -ForceReset"

Write-Host "`n‚öôÔ∏è PAR√ÇMETROS COMUNS:" -ForegroundColor Yellow
Write-Host "=====================" -ForegroundColor Yellow

Write-Host "`n-Verbose      Exibe logs detalhados da opera√ß√£o"
Write-Host "-DryRun       Simula a opera√ß√£o sem fazer mudan√ßas reais"
Write-Host "-Help         Exibe ajuda detalhada do script"
Write-Host "-OutputFile   Especifica arquivo de sa√≠da (export)"
Write-Host "-ExportFile   Especifica arquivo de entrada (import)"
Write-Host "-NoBackup     N√£o faz backup antes de opera√ß√µes destrutivas"
Write-Host "-ForceReset   N√£o pede confirma√ß√£o para opera√ß√µes perigosas"

Write-Host "`nüîß CONFIGURA√á√ÉO:" -ForegroundColor Yellow
Write-Host "=================" -ForegroundColor Yellow

Write-Host "`nServidor padr√£o: http://localhost:8080/csonline/api"
Write-Host "Login padr√£o: empresa"
Write-Host "Senha padr√£o: empresa123"
Write-Host "Arquivo padr√£o: database-export.sql"

Write-Host "`n‚ö†Ô∏è AVISOS IMPORTANTES:" -ForegroundColor Red
Write-Host "======================" -ForegroundColor Red

Write-Host "`nüö® reset-and-import.ps1 APAGA TODOS OS DADOS!"
Write-Host "   Use sempre com cuidado em ambiente de produ√ß√£o"
Write-Host "   Fa√ßa backup antes de usar (ou use -DryRun primeiro)"

Write-Host "`nüîê Todos os scripts usam autentica√ß√£o JWT"
Write-Host "   Certifique-se de que o servidor est√° rodando"
Write-Host "   Credenciais devem ter permiss√µes administrativas"

Write-Host "`nüìù EXEMPLOS PR√ÅTICOS:" -ForegroundColor Yellow
Write-Host "======================" -ForegroundColor Yellow

Write-Host "`nüéØ Backup di√°rio autom√°tico:"
Write-Host '   $arquivo = "backup-$(Get-Date -Format ''yyyyMMdd-HHmmss'').sql"'
Write-Host '   .\export-database.ps1 -OutputFile $arquivo'

Write-Host "`nüéØ Testar importa√ß√£o sem riscos:"
Write-Host "   .\import-database-advanced.ps1 -DryRun -Verbose"

Write-Host "`nüéØ Reset completo com seguran√ßa:"
Write-Host "   .\reset-and-import.ps1 -Verbose"
Write-Host "   # O script vai pedir confirma√ß√£o e fazer backup automaticamente"

Write-Host "`nüéØ Reset for√ßado (PERIGOSO - s√≥ para desenvolvimento):"
Write-Host "   .\reset-and-import.ps1 -NoBackup -ForceReset -DryRun"
Write-Host "   # Primeiro teste com -DryRun, depois remova o -DryRun"

Write-Host "`n‚úÖ TESTES REALIZADOS:" -ForegroundColor Green
Write-Host "======================" -ForegroundColor Green

Write-Host "`nüì§ Export funcionando: ‚úÖ"
Write-Host "   - Conecta ao banco via API"
Write-Host "   - Extrai todos os dados"
Write-Host "   - Gera arquivo SQL estruturado"
Write-Host "   - Total exportado: 18 registros (8 users, 2 couriers, 2 customers, 2 deliveries, 2 teams, 2 sms)"

Write-Host "`nüß† Parse avan√ßado funcionando: ‚úÖ"
Write-Host "   - Parse completo do arquivo SQL"
Write-Host "   - Identifica√ß√£o correta de 6 tabelas"
Write-Host "   - Mapeamento de relacionamentos"
Write-Host "   - Modo dry-run validado"

Write-Host "`nüîÑ Reset simulado funcionando: ‚úÖ"
Write-Host "   - Verifica√ß√£o de servidor"
Write-Host "   - Autentica√ß√£o JWT"
Write-Host "   - Simula√ß√£o de limpeza"
Write-Host "   - Simula√ß√£o de importa√ß√£o"

Write-Host "`nüéâ TODOS OS SCRIPTS EST√ÉO PRONTOS PARA USO!" -ForegroundColor Green

Write-Host "`n============================================================" -ForegroundColor Cyan
Write-Host "Para ajuda detalhada de qualquer script, use: script.ps1 -Help" -ForegroundColor Gray
Write-Host "============================================================" -ForegroundColor Cyan
