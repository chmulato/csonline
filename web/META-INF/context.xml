<?xml version="1.0" encoding="UTF-8"?>
<Context path="/csonline">
  <!-- Production Configuration JNDI -->
  <Resource auth="Container" name="jdbc/db_cso" driverClassName="com.mysql.jdbc.Driver" initialSize="10" logAbandoned="true" maxActive="100" maxIdle="30" maxWait="10000" removeAbandoned="true" removeAbandonedTimeout="1800" type="javax.sql.DataSource" url="jdbc:mysql://127.0.0.1:3306/caracore_csodatabase" username="caracore_mulato" password="UhdrE@75a1" />
</Context>
<!--
	        Lembrando que, como é o Tomcat, que efetua a conexão com o banco de
	        dados, é necessário colocar no diretório common\lib do TomCat, o jar
	        com o driver JDBC do Database (MySQL)                       -->
<!-- maxActive: Maximum number of dB connections in pool. Make sure you
	         configure your MySQL max_connections large enough to handle
	         all of your db connections. Set to -1 for no limit.           -->
<!-- maxIdle: Maximum number of idle dB connections to retain in pool.
	         Set to -1 for no limit.  See also the DBCP documentation on this
	         and the minEvictableIdleTimeMillis configuration parameter.   -->
<!-- maxWait: Maximum time to wait for a dB connection to become available
	         in ms, in this example 10 seconds. An Exception is thrown if
	         this timeout is exceeded.  Set to -1 to wait indefinitely.    -->
<!-- username and password: Database username and password for dB connections  -->
<!-- driverClassName: Class name for the old mm.mysql JDBC driver is
	         org.gjt.mm.mysql.Driver - we recommend using Connector/J though.
	         Class name for the official Database Connector driver is com.mysql.jdbc.Driver. -->
<!-- url: The JDBC connection url for connecting to your MySQL. -->
<!-- removeAbandoned - true or false: whether to remove abandoned connections from the pool.
	         Default: false -->
<!-- removeAbandonedTimeout - The number of seconds after which a borrowed connection is
		     assumed to be abandoned. Default: - First need to checked timeout web application.  -->
<!-- logAbandoned - true or false: whether to log stack traces for application code which abandoned
		     a statement or connection. This adds serious overhead. Default: false  -->
